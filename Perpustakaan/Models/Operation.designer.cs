#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Perpustakaan.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Perpus")]
	public partial class OperationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKelompok(Kelompok instance);
    partial void UpdateKelompok(Kelompok instance);
    partial void DeleteKelompok(Kelompok instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertDBuku(DBuku instance);
    partial void UpdateDBuku(DBuku instance);
    partial void DeleteDBuku(DBuku instance);
    partial void InsertAuten(Auten instance);
    partial void UpdateAuten(Auten instance);
    partial void DeleteAuten(Auten instance);
    partial void InsertDibaca(Dibaca instance);
    partial void UpdateDibaca(Dibaca instance);
    partial void DeleteDibaca(Dibaca instance);
    partial void InsertBiodata(Biodata instance);
    partial void UpdateBiodata(Biodata instance);
    partial void DeleteBiodata(Biodata instance);
    partial void InsertSPinjam(SPinjam instance);
    partial void UpdateSPinjam(SPinjam instance);
    partial void DeleteSPinjam(SPinjam instance);
    partial void InsertPinjam(Pinjam instance);
    partial void UpdatePinjam(Pinjam instance);
    partial void DeletePinjam(Pinjam instance);
    #endregion
		
		public OperationDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PerpusConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Kelompok> Kelompoks
		{
			get
			{
				return this.GetTable<Kelompok>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<DBuku> DBukus
		{
			get
			{
				return this.GetTable<DBuku>();
			}
		}
		
		public System.Data.Linq.Table<Auten> Autens
		{
			get
			{
				return this.GetTable<Auten>();
			}
		}
		
		public System.Data.Linq.Table<Dibaca> Dibacas
		{
			get
			{
				return this.GetTable<Dibaca>();
			}
		}
		
		public System.Data.Linq.Table<Biodata> Biodatas
		{
			get
			{
				return this.GetTable<Biodata>();
			}
		}
		
		public System.Data.Linq.Table<SPinjam> SPinjams
		{
			get
			{
				return this.GetTable<SPinjam>();
			}
		}
		
		public System.Data.Linq.Table<Pinjam> Pinjams
		{
			get
			{
				return this.GetTable<Pinjam>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kelompok")]
	public partial class Kelompok : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _GBuku;
		
		private int _GenreId;
		
		private string _LBuku;
		
		private EntitySet<DBuku> _DBukus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGBukuChanging(string value);
    partial void OnGBukuChanged();
    partial void OnGenreIdChanging(int value);
    partial void OnGenreIdChanged();
    partial void OnLBukuChanging(string value);
    partial void OnLBukuChanged();
    #endregion
		
		public Kelompok()
		{
			this._DBukus = new EntitySet<DBuku>(new Action<DBuku>(this.attach_DBukus), new Action<DBuku>(this.detach_DBukus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GBuku", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GBuku
		{
			get
			{
				return this._GBuku;
			}
			set
			{
				if ((this._GBuku != value))
				{
					this.OnGBukuChanging(value);
					this.SendPropertyChanging();
					this._GBuku = value;
					this.SendPropertyChanged("GBuku");
					this.OnGBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreId", DbType="Int NOT NULL")]
		public int GenreId
		{
			get
			{
				return this._GenreId;
			}
			set
			{
				if ((this._GenreId != value))
				{
					this.OnGenreIdChanging(value);
					this.SendPropertyChanging();
					this._GenreId = value;
					this.SendPropertyChanged("GenreId");
					this.OnGenreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LBuku", DbType="NVarChar(100)")]
		public string LBuku
		{
			get
			{
				return this._LBuku;
			}
			set
			{
				if ((this._LBuku != value))
				{
					this.OnLBukuChanging(value);
					this.SendPropertyChanging();
					this._LBuku = value;
					this.SendPropertyChanged("LBuku");
					this.OnLBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kelompok_DBuku", Storage="_DBukus", ThisKey="Id", OtherKey="IdBuku")]
		public EntitySet<DBuku> DBukus
		{
			get
			{
				return this._DBukus;
			}
			set
			{
				this._DBukus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DBukus(DBuku entity)
		{
			this.SendPropertyChanging();
			entity.Kelompok = this;
		}
		
		private void detach_DBukus(DBuku entity)
		{
			this.SendPropertyChanging();
			entity.Kelompok = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DBuku")]
	public partial class DBuku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Judul;
		
		private string _Penerbit;
		
		private string _LTerbit;
		
		private string _Pengarang;
		
		private int _Jumlah;
		
		private System.Nullable<int> _IdBuku;
		
		private string _Images;
		
		private EntitySet<SPinjam> _SPinjams;
		
		private EntitySet<Pinjam> _Pinjams;
		
		private EntityRef<Kelompok> _Kelompok;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJudulChanging(string value);
    partial void OnJudulChanged();
    partial void OnPenerbitChanging(string value);
    partial void OnPenerbitChanged();
    partial void OnLTerbitChanging(string value);
    partial void OnLTerbitChanged();
    partial void OnPengarangChanging(string value);
    partial void OnPengarangChanged();
    partial void OnJumlahChanging(int value);
    partial void OnJumlahChanged();
    partial void OnIdBukuChanging(System.Nullable<int> value);
    partial void OnIdBukuChanged();
    partial void OnImagesChanging(string value);
    partial void OnImagesChanged();
    #endregion
		
		public DBuku()
		{
			this._SPinjams = new EntitySet<SPinjam>(new Action<SPinjam>(this.attach_SPinjams), new Action<SPinjam>(this.detach_SPinjams));
			this._Pinjams = new EntitySet<Pinjam>(new Action<Pinjam>(this.attach_Pinjams), new Action<Pinjam>(this.detach_Pinjams));
			this._Kelompok = default(EntityRef<Kelompok>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Judul", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Judul
		{
			get
			{
				return this._Judul;
			}
			set
			{
				if ((this._Judul != value))
				{
					this.OnJudulChanging(value);
					this.SendPropertyChanging();
					this._Judul = value;
					this.SendPropertyChanged("Judul");
					this.OnJudulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Penerbit", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Penerbit
		{
			get
			{
				return this._Penerbit;
			}
			set
			{
				if ((this._Penerbit != value))
				{
					this.OnPenerbitChanging(value);
					this.SendPropertyChanging();
					this._Penerbit = value;
					this.SendPropertyChanged("Penerbit");
					this.OnPenerbitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LTerbit", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LTerbit
		{
			get
			{
				return this._LTerbit;
			}
			set
			{
				if ((this._LTerbit != value))
				{
					this.OnLTerbitChanging(value);
					this.SendPropertyChanging();
					this._LTerbit = value;
					this.SendPropertyChanged("LTerbit");
					this.OnLTerbitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pengarang", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Pengarang
		{
			get
			{
				return this._Pengarang;
			}
			set
			{
				if ((this._Pengarang != value))
				{
					this.OnPengarangChanging(value);
					this.SendPropertyChanging();
					this._Pengarang = value;
					this.SendPropertyChanged("Pengarang");
					this.OnPengarangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jumlah", DbType="Int NOT NULL")]
		public int Jumlah
		{
			get
			{
				return this._Jumlah;
			}
			set
			{
				if ((this._Jumlah != value))
				{
					this.OnJumlahChanging(value);
					this.SendPropertyChanging();
					this._Jumlah = value;
					this.SendPropertyChanged("Jumlah");
					this.OnJumlahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBuku", DbType="Int")]
		public System.Nullable<int> IdBuku
		{
			get
			{
				return this._IdBuku;
			}
			set
			{
				if ((this._IdBuku != value))
				{
					if (this._Kelompok.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBukuChanging(value);
					this.SendPropertyChanging();
					this._IdBuku = value;
					this.SendPropertyChanged("IdBuku");
					this.OnIdBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Images", DbType="NVarChar(300)")]
		public string Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				if ((this._Images != value))
				{
					this.OnImagesChanging(value);
					this.SendPropertyChanging();
					this._Images = value;
					this.SendPropertyChanged("Images");
					this.OnImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBuku_SPinjam", Storage="_SPinjams", ThisKey="Id", OtherKey="IdBuku")]
		public EntitySet<SPinjam> SPinjams
		{
			get
			{
				return this._SPinjams;
			}
			set
			{
				this._SPinjams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBuku_Pinjam", Storage="_Pinjams", ThisKey="Id", OtherKey="IdBuku")]
		public EntitySet<Pinjam> Pinjams
		{
			get
			{
				return this._Pinjams;
			}
			set
			{
				this._Pinjams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kelompok_DBuku", Storage="_Kelompok", ThisKey="IdBuku", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Kelompok Kelompok
		{
			get
			{
				return this._Kelompok.Entity;
			}
			set
			{
				Kelompok previousValue = this._Kelompok.Entity;
				if (((previousValue != value) 
							|| (this._Kelompok.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kelompok.Entity = null;
						previousValue.DBukus.Remove(this);
					}
					this._Kelompok.Entity = value;
					if ((value != null))
					{
						value.DBukus.Add(this);
						this._IdBuku = value.Id;
					}
					else
					{
						this._IdBuku = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kelompok");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPinjams(SPinjam entity)
		{
			this.SendPropertyChanging();
			entity.DBuku = this;
		}
		
		private void detach_SPinjams(SPinjam entity)
		{
			this.SendPropertyChanging();
			entity.DBuku = null;
		}
		
		private void attach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.DBuku = this;
		}
		
		private void detach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.DBuku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auten")]
	public partial class Auten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _AutSes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnAutSesChanging(string value);
    partial void OnAutSesChanged();
    #endregion
		
		public Auten()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutSes", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string AutSes
		{
			get
			{
				return this._AutSes;
			}
			set
			{
				if ((this._AutSes != value))
				{
					this.OnAutSesChanging(value);
					this.SendPropertyChanging();
					this._AutSes = value;
					this.SendPropertyChanged("AutSes");
					this.OnAutSesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dibaca")]
	public partial class Dibaca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private string _RBuku;
		
		private string _RWaktu;
		
		private EntityRef<Biodata> _Biodata;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnRBukuChanging(string value);
    partial void OnRBukuChanged();
    partial void OnRWaktuChanging(string value);
    partial void OnRWaktuChanged();
    #endregion
		
		public Dibaca()
		{
			this._Biodata = default(EntityRef<Biodata>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._Biodata.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBuku", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RBuku
		{
			get
			{
				return this._RBuku;
			}
			set
			{
				if ((this._RBuku != value))
				{
					this.OnRBukuChanging(value);
					this.SendPropertyChanging();
					this._RBuku = value;
					this.SendPropertyChanged("RBuku");
					this.OnRBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RWaktu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RWaktu
		{
			get
			{
				return this._RWaktu;
			}
			set
			{
				if ((this._RWaktu != value))
				{
					this.OnRWaktuChanging(value);
					this.SendPropertyChanging();
					this._RWaktu = value;
					this.SendPropertyChanged("RWaktu");
					this.OnRWaktuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biodata_Dibaca", Storage="_Biodata", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Biodata Biodata
		{
			get
			{
				return this._Biodata.Entity;
			}
			set
			{
				Biodata previousValue = this._Biodata.Entity;
				if (((previousValue != value) 
							|| (this._Biodata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Biodata.Entity = null;
						previousValue.Dibacas.Remove(this);
					}
					this._Biodata.Entity = value;
					if ((value != null))
					{
						value.Dibacas.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("Biodata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Biodata")]
	public partial class Biodata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Alamat;
		
		private string _Email;
		
		private string _Pass;
		
		private string _Makanan;
		
		private string _Film;
		
		private string _WDaftar;
		
		private EntitySet<Dibaca> _Dibacas;
		
		private EntitySet<SPinjam> _SPinjams;
		
		private EntitySet<Pinjam> _Pinjams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnAlamatChanging(string value);
    partial void OnAlamatChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnMakananChanging(string value);
    partial void OnMakananChanged();
    partial void OnFilmChanging(string value);
    partial void OnFilmChanged();
    partial void OnWDaftarChanging(string value);
    partial void OnWDaftarChanged();
    #endregion
		
		public Biodata()
		{
			this._Dibacas = new EntitySet<Dibaca>(new Action<Dibaca>(this.attach_Dibacas), new Action<Dibaca>(this.detach_Dibacas));
			this._SPinjams = new EntitySet<SPinjam>(new Action<SPinjam>(this.attach_SPinjams), new Action<SPinjam>(this.detach_SPinjams));
			this._Pinjams = new EntitySet<Pinjam>(new Action<Pinjam>(this.attach_Pinjams), new Action<Pinjam>(this.detach_Pinjams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alamat", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Alamat
		{
			get
			{
				return this._Alamat;
			}
			set
			{
				if ((this._Alamat != value))
				{
					this.OnAlamatChanging(value);
					this.SendPropertyChanging();
					this._Alamat = value;
					this.SendPropertyChanged("Alamat");
					this.OnAlamatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Makanan", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Makanan
		{
			get
			{
				return this._Makanan;
			}
			set
			{
				if ((this._Makanan != value))
				{
					this.OnMakananChanging(value);
					this.SendPropertyChanging();
					this._Makanan = value;
					this.SendPropertyChanged("Makanan");
					this.OnMakananChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Film", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Film
		{
			get
			{
				return this._Film;
			}
			set
			{
				if ((this._Film != value))
				{
					this.OnFilmChanging(value);
					this.SendPropertyChanging();
					this._Film = value;
					this.SendPropertyChanged("Film");
					this.OnFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WDaftar", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WDaftar
		{
			get
			{
				return this._WDaftar;
			}
			set
			{
				if ((this._WDaftar != value))
				{
					this.OnWDaftarChanging(value);
					this.SendPropertyChanging();
					this._WDaftar = value;
					this.SendPropertyChanged("WDaftar");
					this.OnWDaftarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biodata_Dibaca", Storage="_Dibacas", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Dibaca> Dibacas
		{
			get
			{
				return this._Dibacas;
			}
			set
			{
				this._Dibacas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biodata_SPinjam", Storage="_SPinjams", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<SPinjam> SPinjams
		{
			get
			{
				return this._SPinjams;
			}
			set
			{
				this._SPinjams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biodata_Pinjam", Storage="_Pinjams", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<Pinjam> Pinjams
		{
			get
			{
				return this._Pinjams;
			}
			set
			{
				this._Pinjams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dibacas(Dibaca entity)
		{
			this.SendPropertyChanging();
			entity.Biodata = this;
		}
		
		private void detach_Dibacas(Dibaca entity)
		{
			this.SendPropertyChanging();
			entity.Biodata = null;
		}
		
		private void attach_SPinjams(SPinjam entity)
		{
			this.SendPropertyChanging();
			entity.Biodata = this;
		}
		
		private void detach_SPinjams(SPinjam entity)
		{
			this.SendPropertyChanging();
			entity.Biodata = null;
		}
		
		private void attach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.Biodata = this;
		}
		
		private void detach_Pinjams(Pinjam entity)
		{
			this.SendPropertyChanging();
			entity.Biodata = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPinjam")]
	public partial class SPinjam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private string _PBuku;
		
		private System.Nullable<System.DateTime> _WKembali;
		
		private System.Nullable<int> _IdBuku;
		
		private EntityRef<Biodata> _Biodata;
		
		private EntityRef<DBuku> _DBuku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnPBukuChanging(string value);
    partial void OnPBukuChanged();
    partial void OnWKembaliChanging(System.Nullable<System.DateTime> value);
    partial void OnWKembaliChanged();
    partial void OnIdBukuChanging(System.Nullable<int> value);
    partial void OnIdBukuChanged();
    #endregion
		
		public SPinjam()
		{
			this._Biodata = default(EntityRef<Biodata>);
			this._DBuku = default(EntityRef<DBuku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._Biodata.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBuku", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PBuku
		{
			get
			{
				return this._PBuku;
			}
			set
			{
				if ((this._PBuku != value))
				{
					this.OnPBukuChanging(value);
					this.SendPropertyChanging();
					this._PBuku = value;
					this.SendPropertyChanged("PBuku");
					this.OnPBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WKembali", DbType="DateTime")]
		public System.Nullable<System.DateTime> WKembali
		{
			get
			{
				return this._WKembali;
			}
			set
			{
				if ((this._WKembali != value))
				{
					this.OnWKembaliChanging(value);
					this.SendPropertyChanging();
					this._WKembali = value;
					this.SendPropertyChanged("WKembali");
					this.OnWKembaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBuku", DbType="Int")]
		public System.Nullable<int> IdBuku
		{
			get
			{
				return this._IdBuku;
			}
			set
			{
				if ((this._IdBuku != value))
				{
					if (this._DBuku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBukuChanging(value);
					this.SendPropertyChanging();
					this._IdBuku = value;
					this.SendPropertyChanged("IdBuku");
					this.OnIdBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biodata_SPinjam", Storage="_Biodata", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Biodata Biodata
		{
			get
			{
				return this._Biodata.Entity;
			}
			set
			{
				Biodata previousValue = this._Biodata.Entity;
				if (((previousValue != value) 
							|| (this._Biodata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Biodata.Entity = null;
						previousValue.SPinjams.Remove(this);
					}
					this._Biodata.Entity = value;
					if ((value != null))
					{
						value.SPinjams.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("Biodata");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBuku_SPinjam", Storage="_DBuku", ThisKey="IdBuku", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public DBuku DBuku
		{
			get
			{
				return this._DBuku.Entity;
			}
			set
			{
				DBuku previousValue = this._DBuku.Entity;
				if (((previousValue != value) 
							|| (this._DBuku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DBuku.Entity = null;
						previousValue.SPinjams.Remove(this);
					}
					this._DBuku.Entity = value;
					if ((value != null))
					{
						value.SPinjams.Add(this);
						this._IdBuku = value.Id;
					}
					else
					{
						this._IdBuku = default(Nullable<int>);
					}
					this.SendPropertyChanged("DBuku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pinjam")]
	public partial class Pinjam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private string _PBuku;
		
		private System.Nullable<bool> _Confirm;
		
		private System.Nullable<System.DateTime> _WPinjam;
		
		private System.Nullable<int> _IdBuku;
		
		private EntityRef<Biodata> _Biodata;
		
		private EntityRef<DBuku> _DBuku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnPBukuChanging(string value);
    partial void OnPBukuChanged();
    partial void OnConfirmChanging(System.Nullable<bool> value);
    partial void OnConfirmChanged();
    partial void OnWPinjamChanging(System.Nullable<System.DateTime> value);
    partial void OnWPinjamChanged();
    partial void OnIdBukuChanging(System.Nullable<int> value);
    partial void OnIdBukuChanged();
    #endregion
		
		public Pinjam()
		{
			this._Biodata = default(EntityRef<Biodata>);
			this._DBuku = default(EntityRef<DBuku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._Biodata.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBuku", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PBuku
		{
			get
			{
				return this._PBuku;
			}
			set
			{
				if ((this._PBuku != value))
				{
					this.OnPBukuChanging(value);
					this.SendPropertyChanging();
					this._PBuku = value;
					this.SendPropertyChanged("PBuku");
					this.OnPBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit")]
		public System.Nullable<bool> Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPinjam", DbType="DateTime")]
		public System.Nullable<System.DateTime> WPinjam
		{
			get
			{
				return this._WPinjam;
			}
			set
			{
				if ((this._WPinjam != value))
				{
					this.OnWPinjamChanging(value);
					this.SendPropertyChanging();
					this._WPinjam = value;
					this.SendPropertyChanged("WPinjam");
					this.OnWPinjamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBuku", DbType="Int")]
		public System.Nullable<int> IdBuku
		{
			get
			{
				return this._IdBuku;
			}
			set
			{
				if ((this._IdBuku != value))
				{
					if (this._DBuku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBukuChanging(value);
					this.SendPropertyChanging();
					this._IdBuku = value;
					this.SendPropertyChanged("IdBuku");
					this.OnIdBukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Biodata_Pinjam", Storage="_Biodata", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Biodata Biodata
		{
			get
			{
				return this._Biodata.Entity;
			}
			set
			{
				Biodata previousValue = this._Biodata.Entity;
				if (((previousValue != value) 
							|| (this._Biodata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Biodata.Entity = null;
						previousValue.Pinjams.Remove(this);
					}
					this._Biodata.Entity = value;
					if ((value != null))
					{
						value.Pinjams.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("Biodata");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DBuku_Pinjam", Storage="_DBuku", ThisKey="IdBuku", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public DBuku DBuku
		{
			get
			{
				return this._DBuku.Entity;
			}
			set
			{
				DBuku previousValue = this._DBuku.Entity;
				if (((previousValue != value) 
							|| (this._DBuku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DBuku.Entity = null;
						previousValue.Pinjams.Remove(this);
					}
					this._DBuku.Entity = value;
					if ((value != null))
					{
						value.Pinjams.Add(this);
						this._IdBuku = value.Id;
					}
					else
					{
						this._IdBuku = default(Nullable<int>);
					}
					this.SendPropertyChanged("DBuku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
